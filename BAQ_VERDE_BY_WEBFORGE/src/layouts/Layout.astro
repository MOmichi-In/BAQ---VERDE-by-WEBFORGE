---
const { title = "Observatorio Ambiental" } = Astro.props; 
const year = new Date().getFullYear();
import "../styles/layout.css";
import "../styles/global.css";
---


<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>{title}</title>
</head>
<body>

  <header class="header">
    <div class="container">
      <div class="logo">
        <img src="/images/logo.png" alt="Observatorio Ambiental" />
      </div>
      <nav class="nav">
        <a href="/">Home</a>
        <a href="/participation">Participation</a>
        <a href="/maps">Maps</a>
        <a href="/news">News</a>
        <a href="/documents">Documents</a>
      </nav>
    </div>
  </header>

  <section class="hero">
    <div class="hero-content">
        <h1>{title}</h1> 
    </div>
  </section>

  <main>
    <slot />
  </main>

  <footer class="footer">
    <div class="container">
      <div class="footer-grid">
        <div class="footer-col">
          <div class="logo-footer">
            <img src="/images/logo-footer.png" alt="Logo Observatorio Ambiental" />
          </div>
          <p>
            Observatorio Ambiental<br />
            Av. 9 de Julio 1234, Ciudad<br />
            info@observatorioambiental.org
          </p>
          <div class="social-links">
            <a href="#"><i class="fab fa-facebook-f"></i></a>
            <a href="#"><i class="fab fa-twitter"></i></a>
            <a href="#"><i class="fab fa-instagram"></i></a>
          </div>
        </div>

        <div class="footer-col">
          <h4>Secciones</h4>
          <ul>
            <li><a href="/">Home</a></li>
            <li><a href="/participation">Participation</a></li>
            <li><a href="/maps">Maps</a></li>
            <li><a href="/news">News</a></li>
            <li><a href="/documents">Documents</a></li>
          </ul>
        </div>

        <div class="footer-col">
          <h4>Recursos</h4>
          <ul>
            <li><a href="#">Descargas</a></li>
            <li><a href="#">API</a></li>
            <li><a href="#">Reportes</a></li>
            <li><a href="#">Sistema</a></li>
          </ul>
        </div>

        <div class="footer-col">
          <h4>Contacto</h4>
          <ul>
            <li>Email: contacto@observatorioambiental.org</li>
            <li>Tel: +54 11 1234-5678</li>
            <li>Horario: L-V 9:00 - 18:00</li>
          </ul>
        </div>
      </div>
      <div class="footer-bottom">
        <p>&copy; {year} Observatorio Ambiental. Todos los derechos reservados.</p>
      </div>
    </div>
  </footer>

</body>
</html>

<script>
document.addEventListener("DOMContentLoaded", () => {
  const nav = document.querySelector(".header .nav");
  const links = nav.querySelectorAll("a");

  const indicator = document.createElement("span");
  indicator.classList.add("nav-indicator");
  nav.appendChild(indicator);

  function moveIndicator(el, instant = false) {
    const rect = el.getBoundingClientRect();
    const navRect = nav.getBoundingClientRect();

    if (instant) {
      indicator.style.transition = "none"; // ❌ sin animación
    } else {
      indicator.style.transition = "width 0.3s ease, transform 0.3s ease"; // ✅ animación normal
    }

    indicator.style.width = rect.width + "px";
    indicator.style.transform = `translateX(${rect.left - navRect.left}px)`;

    if (instant) {
      // 🔥 reactivar transición después de forzar la posición inicial
      requestAnimationFrame(() => {
        indicator.style.transition = "width 0.3s ease, transform 0.3s ease";
      });
    }
  }

  function setActiveByPath() {
    const path = window.location.pathname;
    let found = false;
    links.forEach(link => {
      link.classList.remove("active");
      if (link.getAttribute("href") === path) {
        link.classList.add("active");
        moveIndicator(link, true); // 👈 primera vez instantáneo
        found = true;
      }
    });
    return found;
  }

  function onScroll() {
    const sections = document.querySelectorAll("main section[id]");
    let current = "";
    sections.forEach(sec => {
      const secTop = sec.offsetTop - 100;
      const secHeight = sec.clientHeight;
      if (window.scrollY >= secTop && window.scrollY < secTop + secHeight) {
        current = sec.getAttribute("id");
      }
    });
    links.forEach(link => {
      link.classList.remove("active");
      if (link.getAttribute("href") === "#" + current) {
        link.classList.add("active");
        moveIndicator(link);
      }
    });
  }

  links.forEach(link => {
    link.addEventListener("mouseenter", () => moveIndicator(link));
    link.addEventListener("mouseleave", () => {
      const active = nav.querySelector("a.active");
      if (active) moveIndicator(active);
    });
  });

  if (!setActiveByPath()) {
    window.addEventListener("scroll", onScroll);
    onScroll();
  }
});

</script>
