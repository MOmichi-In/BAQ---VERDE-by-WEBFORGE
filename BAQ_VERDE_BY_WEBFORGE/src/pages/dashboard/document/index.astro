---
export const prerender = false;
import Layout from "../../../layouts/DashboardLayout.astro";
import { api } from "../../../lib/api";

const cookieStore = Astro.cookies;
const sessionToken = cookieStore.get("token")?.value;

if (!sessionToken) {
    return Astro.redirect("/login");
}

if (Astro.url.searchParams.get("logout") === "true") {
    Astro.cookies.delete("token", { path: "/" });
    return Astro.redirect("/login");
}

// Obtener documentos
const docsRes = await api(`/documents`, sessionToken); // ‚Üê ¬°Agregu√© sessionToken aqu√≠!
const documentos = docsRes || [];
---

<Layout title="Gesti√≥n de Documentos">
    <div class="dashboard-container">
        <!-- Header Section -->
        <div class="dashboard-header">
            <div class="header-content">
                <div class="title-section">
                    <h1 class="dashboard-title">üìÅ Gesti√≥n de Documentos</h1>
                    <p class="dashboard-subtitle">
                        Administra los documentos oficiales del observatorio
                    </p>
                </div>
                <div class="header-actions">
                    <a href="/dashboard/document/upload" class="btn-primary">
                        <span class="btn-icon">‚ûï</span>
                        Subir Documento
                    </a>
                </div>
            </div>
        </div>

        <!-- Documentos Grid -->
        {
            documentos.length === 0 ? (
                <div class="empty-state">
                    <div class="empty-icon">üìÑ</div>
                    <h3 class="empty-title">No hay documentos a√∫n</h3>
                    <p class="empty-text">
                        Sube tu primer documento para comenzar a organizar la informaci√≥n.
                    </p>
                </div>
            ) : (
                <div class="docs-grid">
                    {documentos.map((doc) => (
                        <div class="doc-card">
                            <div class="doc-header">
                                <h3 class="doc-title">{doc.name}</h3>
                                <span class="doc-date">
                                    üìÖ {new Date(doc.created_at).toLocaleDateString()}
                                </span>
                            </div>
                            <div class="doc-meta">
                                <span class="doc-author">üë§ {doc.autor || "Desconocido"}</span>
                            </div>
                            <div class="doc-actions">
                                <a
                                    href={`${import.meta.env.PUBLIC_URL_SERVER}${doc.document_url}`}
                                    target="_blank"
                                    rel="noopener noreferrer"
                                    class="btn-view"
                                >
                                    <span class="btn-icon">üëÅÔ∏è</span>
                                    Ver Documento
                                </a>
                                <button
                                    class="btn-delete"
                                    data-id={doc._id}
                                    data-url={doc.document_url}
                                >
                                    <span class="btn-icon">üóëÔ∏è</span>
                                    Eliminar
                                </button>
                            </div>
                        </div>
                    ))}
                </div>
            )
        }
    </div>

    <style>
        .dashboard-container {
            padding: var(--spacing-xl);
            max-width: 95vw;
            margin: 0 auto;
            min-height: 100vh;
            max-width: 95vw;
            background: var(--color-gris-claro);
        }

        .dashboard-header {
            background: var(--color-verde);
            border-radius: var(--border-radius-lg);
            padding: var(--spacing-xl);
            margin-bottom: var(--spacing-xl);
            color: var(--color-blanco);
            box-shadow: var(--shadow-lg);
        }

        .header-content {
            display: flex;
            justify-content: space-between;
            align-items: center;
            flex-wrap: wrap;
            gap: var(--spacing-md);
        }

        .title-section {
            flex: 1;
        }

        .dashboard-title {
            font-size: 2.5rem;
            font-weight: 700;
            margin: 0 0 var(--spacing-sm) 0;
            color: var(--color-blanco);
        }

        .dashboard-subtitle {
            font-size: 1.1rem;
            opacity: 0.9;
            margin: 0;
        }

        .btn-primary {
            background: var(--color-amarillo);
            color: var(--color-azul-oscuro);
            padding: var(--spacing-md) var(--spacing-lg);
            border-radius: var(--border-radius-lg);
            font-weight: 600;
            display: flex;
            align-items: center;
            gap: var(--spacing-sm);
            transition: all 0.3s ease;
            border: none;
            text-decoration: none;
            box-shadow: var(--shadow-md);
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            background: var(--color-verde-secundario);
            color: var(--color-blanco);
            box-shadow: var(--shadow-lg);
        }

        .btn-icon {
            font-size: 1.1rem;
        }

        /* Documentos Grid */
        .docs-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
            gap: var(--spacing-lg);
        }

        .doc-card {
            background: var(--color-blanco);
            border-radius: var(--border-radius-lg);
            padding: var(--spacing-md);
            border: 1px solid var(--color-gris-claro);
            box-shadow: var(--shadow-md);
            transition: all 0.3s ease;
        }

        .doc-card:hover {
            transform: translateY(-4px);
            box-shadow: var(--shadow-lg);
        }

        .doc-header {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            margin-bottom: var(--spacing-md);
        }

        .doc-title {
            font-size: 1.25rem;
            font-weight: 600;
            color: var(--color-azul-oscuro);
            margin: 0;
            word-break: break-word;
        }

        .doc-date {
            font-size: 0.85rem;
            color: var(--color-blanco);
            padding: 0.25rem 0.75rem;
            border-radius: 20px;
            background: var(--color-verde-secundario);
        }

        .doc-meta {
            margin-bottom: var(--spacing-lg);
        }

        .doc-author {
            font-size: 0.9rem;
            color: var(--color-azul-oscuro);
            display: inline-block;
            padding: 0.25rem 0.75rem;
            border-radius: 20px;
            background: var(--color-amarillo);
        }

        .doc-actions {
            display: flex;
            gap: var(--spacing-sm);
            flex-wrap: wrap;
        }

        .btn-view,
        .btn-delete {
            padding: 0.75rem 1.25rem;
            border-radius: var(--border-radius-md);
            font-weight: 600;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: var(--spacing-xs);
            transition: all 0.3s ease;
            cursor: pointer;
            text-decoration: none;
            font-size: 0.9rem;
            min-width: 120px;
            border: none;
        }

        .btn-view {
            background: var(--color-azul-oscuro);
            color: var(--color-blanco);
            box-shadow: var(--shadow-sm);
        }

        .btn-view:hover {
            background: var(--color-verde);
            box-shadow: var(--shadow-md);
            transform: translateY(-2px);
        }

        .btn-delete {
            background: var(--color-amarillo);
            color: var(--color-azul-oscuro);
            box-shadow: var(--shadow-sm);
        }

        .btn-delete:hover {
            background: var(--color-verde-secundario);
            color: var(--color-blanco);
            transform: translateY(-2px);
            box-shadow: var(--shadow-md);
        }

        /* Empty State */
        .empty-state {
            text-align: center;
            padding: 4rem 2rem;
            background: rgba(255, 255, 255, 0.6);
            border-radius: var(--border-radius-lg);
            backdrop-filter: blur(5px);
            border: 2px dashed var(--color-gris);
        }

        .empty-icon {
            font-size: 4rem;
            color: var(--color-gris-medio);
            margin-bottom: var(--spacing-sm);
        }

        .empty-title {
            font-size: 1.8rem;
            font-weight: 600;
            color: var(--color-gris-oscuro);
            margin: 0 0 var(--spacing-sm) 0;
        }

        .empty-text {
            font-size: 1.1rem;
            color: var(--color-gris);
            max-width: 600px;
            margin: 0 auto;
        }

        @media (max-width: 768px) {
            .dashboard-container {
                padding: var(--spacing-lg);
            }
            .dashboard-title {
                font-size: 2rem;
            }
            .header-content {
                flex-direction: column;
                text-align: center;
            }
            .docs-grid {
                grid-template-columns: 1fr;
            }
            .doc-actions {
                flex-direction: column;
            }
            .btn-view,
            .btn-delete {
                width: 100%;
            }
        }
    </style>

    <script>
        function getCookie(name) {
            const value = `; ${document.cookie}`;
            const parts = value.split(`; ${name}=`);
            if (parts.length === 2) return parts.pop().split(";").shift();
        }

        document.querySelectorAll(".btn-delete").forEach((btn) => {
            btn.addEventListener("click", async (e) => {
                const id = e.target.dataset.id;
                if (!confirm("¬øEst√°s seguro de que deseas eliminar este documento?")) return;

                try {
                    const token = getCookie("token");
                    if (!token) {
                        alert("Sesi√≥n expirada. Por favor, inicia sesi√≥n nuevamente.");
                        window.location.href = "/login";
                        return;
                    }

                    const res = await fetch(
                        `${import.meta.env.PUBLIC_URL_SERVER}/documents/${id}`,
                        {
                            method: "DELETE",
                            headers: {
                                "Content-Type": "application/json",
                                Authorization: `Bearer ${token}`,
                            },
                        }
                    );

                    if (res.ok) {
                        location.reload();
                    } else {
                        const errorData = await res.json().catch(() => ({}));
                        alert(`Error: ${errorData.detail || "No se pudo eliminar el documento."}`);
                    }
                } catch (err) {
                    alert("Error de conexi√≥n.");
                    console.error(err);
                }
            });
        });
    </script>
</Layout>
