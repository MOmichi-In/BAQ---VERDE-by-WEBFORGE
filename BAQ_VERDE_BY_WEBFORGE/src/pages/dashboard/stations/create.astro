---
import Layout from "../../../layouts/DashboardLayout.astro";
import { api } from "../../../lib/api";

export const prerender = false;

const cookieStore = Astro.cookies;
const sessionToken = cookieStore.get("token")?.value;

if (!sessionToken) {
  return Astro.redirect("/login");
}

if (Astro.url.searchParams.get("logout") === "true") {
  Astro.cookies.delete("token", { path: "/" });
  return Astro.redirect("/login");
}

let error = null;
let success = null;

if (Astro.request.method === "POST") {
  const formData = await Astro.request.formData();
  const name = formData.get("name")?.toString().trim();
  const lat = formData.get("lat")?.toString();
  const lon = formData.get("lon")?.toString();

  // Obtener checkboxes seleccionados
  const chartsSelected = [];
  const allCharts = ["PM10", "PM2.5", "CO", "O3", "SO2", "ICA"];
  for (const chart of allCharts) {
    if (formData.get(`chart_${chart}`)) {
      chartsSelected.push(chart);
    }
  }

  // Validaci√≥n
  if (!name || !lat || !lon) {
    error = "Nombre, latitud y longitud son requeridos";
  } else if (chartsSelected.length === 0) {
    error = "Debes seleccionar al menos un gr√°fico permitido";
  } else {
    const payload = {
      name,
      lat: parseFloat(lat),
      lon: parseFloat(lon),
      charts_permited: chartsSelected,
    };

    const res = await api("/stations", sessionToken, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(payload),
    });

    if (res) {
      success = "Estaci√≥n creada con √©xito";
      return Astro.redirect("/dashboard/stations?success=true");
    } else {
      error =
        "Error al crear la estaci√≥n. Revisa los datos e intenta de nuevo.";
    }
  }
}
---

<Layout title="Crear Estaci√≥n">
  <div class="dashboard-container">
    <!-- Header Section -->
    <div class="dashboard-header">
      <div class="header-content">
        <div class="title-section">
          <h1 class="dashboard-title">üì° Crear Nueva Estaci√≥n</h1>
          <p class="dashboard-subtitle">
            Registra una nueva estaci√≥n de monitoreo ambiental
          </p>
        </div>
        <div class="header-actions">
          <a href="/dashboard/stations" class="btn-back">
            <span class="btn-icon">‚¨ÖÔ∏è</span>
            Volver al Panel
          </a>
        </div>
      </div>
    </div>

    <!-- Alert Messages -->
    {
      error && (
        <div class="alert alert-error">
          <div class="alert-icon">‚ö†Ô∏è</div>
          <div class="alert-content">
            <strong>Error:</strong> {error}
          </div>
        </div>
      )
    }

    {
      success && (
        <div class="alert alert-success">
          <div class="alert-icon">‚úÖ</div>
          <div class="alert-content">
            <strong>√âxito:</strong> {success}
          </div>
        </div>
      )
    }

    <!-- Form Section -->
    <div class="form-container">
      <div class="form-header">
        <h2 class="form-title">Informaci√≥n de la Estaci√≥n</h2>
        <p class="form-subtitle">
          Completa todos los campos obligatorios para registrar la estaci√≥n
        </p>
      </div>

      <form method="post" class="news-form">
        <div class="form-grid">
          <!-- Nombre -->
          <div class="form-group full-width">
            <label for="name" class="form-label">
              <span class="label-icon">üìç</span>
              Nombre de la Estaci√≥n *
            </label>
            <input
              type="text"
              id="name"
              name="name"
              class="form-input"
              placeholder="Ej: Estaci√≥n Norte"
              required
            />
          </div>

          <!-- Latitud y Longitud -->
          <div class="form-group">
            <label for="lat" class="form-label">
              <span class="label-icon">üß≠</span>
              Latitud * (-90 a 90)
            </label>
            <input
              type="number"
              id="lat"
              name="lat"
              class="form-input"
              min="-90"
              max="90"
              step="any"
              placeholder="Ej: 4.60971"
              required
            />
          </div>

          <div class="form-group">
            <label for="lon" class="form-label">
              <span class="label-icon">üß≠</span>
              Longitud * (-180 a 180)
            </label>
            <input
              type="number"
              id="lon"
              name="lon"
              class="form-input"
              min="-180"
              max="180"
              step="any"
              placeholder="Ej: -74.08175"
              required
            />
          </div>

          <!-- Gr√°ficos Permitidos -->
          <div class="form-group full-width">
            <label class="form-label">
              <span class="label-icon">üìä</span>
              Gr√°ficos Permitidos * (Selecciona al menos uno)
            </label>
            <div class="checkbox-group">
              {
                ["PM10", "PM2.5", "CO", "O3", "SO2", "ICA"].map((chart) => (
                  <label class="checkbox-item">
                    <input
                      type="checkbox"
                      name={`chart_${chart}`}
                      value={chart}
                      class="checkbox-input"
                    />
                    <span class="checkbox-label">{chart}</span>
                  </label>
                ))
              }
            </div>
          </div>
        </div>

        <!-- Form Actions -->
        <div class="form-actions">
          <button type="submit" class="btn-submit">
            <span class="btn-icon">üíæ</span>
            Crear Estaci√≥n
          </button>
          <a href="/dashboard/stations" class="btn-cancel">
            <span class="btn-icon">‚ùå</span>
            Cancelar
          </a>
        </div>
      </form>
    </div>
  </div>

  <style>
    .dashboard-container {
      padding: var(--spacing-xl);
      max-width: 95vw;
      margin: 0 auto;
      background: var(--color-gris-claro);
      min-height: 100vh;
    }

    .dashboard-header {
      background: var(--color-verde);
      border-radius: var(--border-radius-lg);
      padding: var(--spacing-xl);
      margin-bottom: var(--spacing-xl);
      color: var(--color-blanco);
      box-shadow: var(--shadow-lg);
    }

    .header-content {
      display: flex;
      justify-content: space-between;
      align-items: center;
      flex-wrap: wrap;
      gap: var(--spacing-md);
    }

    .title-section {
      flex: 1;
    }

    .dashboard-title {
      font-size: 2.5rem;
      font-weight: 700;
      margin: 0 0 var(--spacing-sm) 0;
      color: var(--color-blanco);
    }

    .dashboard-subtitle {
      font-size: 1.1rem;
      opacity: 0.9;
      margin: 0;
    }

    .btn-back {
      background: rgba(255, 255, 255, 0.2);
      backdrop-filter: blur(10px);
      color: var(--color-blanco);
      padding: var(--spacing-md) var(--spacing-lg);
      border-radius: var(--border-radius-md);
      text-decoration: none;
      font-weight: 600;
      display: flex;
      align-items: center;
      gap: var(--spacing-sm);
      transition: all 0.3s ease;
      border: 1px solid rgba(255, 255, 255, 0.3);
    }

    .btn-back:hover {
      background: rgba(255, 255, 255, 0.3);
      transform: translateY(-2px);
    }

    /* Alerts */
    .alert {
      display: flex;
      align-items: center;
      gap: var(--spacing-md);
      padding: var(--spacing-md) var(--spacing-lg);
      border-radius: var(--border-radius-md);
      margin-bottom: var(--spacing-xl);
      backdrop-filter: blur(10px);
      border: 1px solid rgba(255, 255, 255, 0.2);
    }

    .alert-error {
      background: var(--color-rojo-gradiente);
      color: var(--color-blanco);
    }

    .alert-success {
      background: var(--color-verde-gradiente);
      color: var(--color-blanco);
    }

    .alert-icon {
      font-size: 1.5rem;
    }

    .alert-content {
      flex: 1;
    }

    /* Form */
    .form-container {
      background: rgba(255, 255, 255, 0.95);
      backdrop-filter: blur(10px);
      border-radius: var(--border-radius-lg);
      padding: var(--spacing-xl);
      border: 1px solid rgba(255, 255, 255, 0.2);
      box-shadow: var(--shadow-lg);
    }

    .form-header {
      margin-bottom: var(--spacing-xl);
      text-align: center;
    }

    .form-title {
      font-size: 1.8rem;
      font-weight: 600;
      color: var(--color-azul-oscuro);
      margin: 0 0 var(--spacing-sm) 0;
    }

    .form-subtitle {
      color: var(--color-gris);
      font-size: 1rem;
      margin: 0;
    }

    .form-grid {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: var(--spacing-lg);
      margin-bottom: var(--spacing-xl);
    }

    .form-group {
      display: flex;
      flex-direction: column;
      gap: var(--spacing-xs);
    }

    .form-group.full-width {
      grid-column: 1 / -1;
    }

    .form-label {
      font-weight: 600;
      color: var(--color-azul-oscuro);
      display: flex;
      align-items: center;
      gap: var(--spacing-xs);
      font-size: 0.95rem;
    }

    .label-icon {
      font-size: 1.1rem;
    }

    .form-input {
      padding: var(--spacing-md);
      border: 2px solid var(--color-gris-claro);
      border-radius: var(--border-radius-md);
      background: rgba(255, 255, 255, 0.8);
      font-size: 1rem;
      transition: all 0.3s ease;
      color: var(--color-azul-oscuro);
    }

    .form-input:focus {
      outline: none;
      border-color: var(--color-verde);
      background: rgba(255, 255, 255, 0.95);
      box-shadow: 0 0 0 3px rgba(var(--color-verde-rgb), 0.1);
    }

    /* Checkboxes */
    .checkbox-group {
      display: flex;
      flex-wrap: wrap;
      gap: var(--spacing-md);
      margin-top: 0.5rem;
    }

    .checkbox-item {
      display: flex;
      align-items: center;
      gap: var(--spacing-xs);
      cursor: pointer;
    }

    .checkbox-input {
      appearance: none;
      width: 20px;
      height: 20px;
      border: 2px solid var(--color-verde);
      border-radius: 6px;
      background: white;
      cursor: pointer;
      transition: all 0.2s ease;
      position: relative;
    }

    .checkbox-input:checked {
      background: var(--color-verde);
      border-color: var(--color-verde);
    }

    .checkbox-input:checked::after {
      content: "‚úì";
      position: absolute;
      color: white;
      font-size: 14px;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
    }

    .checkbox-label {
      font-size: 0.95rem;
      color: var(--color-azul-oscuro);
      user-select: none;
    }

    .form-actions {
      display: flex;
      gap: var(--spacing-md);
      justify-content: center;
      flex-wrap: wrap;
    }

    .btn-submit,
    .btn-cancel {
      padding: var(--spacing-md) var(--spacing-xl);
      border-radius: var(--border-radius-md);
      font-weight: 600;
      display: flex;
      align-items: center;
      gap: var(--spacing-xs);
      transition: all 0.3s ease;
      cursor: pointer;
      text-decoration: none;
      font-size: 1rem;
      min-width: 160px;
      justify-content: center;
    }

    .btn-submit {
      background: var(--color-verde);
      color: var(--color-blanco);
      border: none;
      box-shadow: var(--shadow-sm);
    }

    .btn-submit:hover {
      transform: translateY(-2px);
      box-shadow: var(--shadow-md);
    }

    .btn-cancel {
      background: var(--color-gris-oscuro);
      color: var(--color-blanco);
      box-shadow: var(--shadow-sm);
    }

    .btn-cancel:hover {
      transform: translateY(-2px);
      box-shadow: var(--shadow-md);
    }

    .btn-icon {
      font-size: 1.1rem;
    }

    @media (max-width: 768px) {
      .dashboard-container {
        padding: var(--spacing-lg);
      }
      .dashboard-title {
        font-size: 2rem;
      }
      .header-content {
        flex-direction: column;
        text-align: center;
      }
      .form-grid {
        grid-template-columns: 1fr;
      }
      .form-actions {
        flex-direction: column;
      }
      .btn-submit,
      .btn-cancel {
        width: 100%;
      }
      .checkbox-group {
        gap: var(--spacing-xs);
      }
      .checkbox-item {
        gap: 0.25rem;
      }
      .checkbox-label {
        font-size: 0.9rem;
      }
    }
  </style>
</Layout>
