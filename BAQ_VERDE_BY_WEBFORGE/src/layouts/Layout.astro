---
const { title = "Observatorio Ambiental" } = Astro.props; 
const year = new Date().getFullYear();
import "../styles/layout.css";
import "../styles/global.css";
---


<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <!-- Preload de la primera imagen (ya lo ten√≠as, mantenlo) -->
  <link rel="preload" as="image" href="/images/hero-bg-01.webp">

  <title>{title}</title>
</head>
<body>

  <header class="header">
    <div class="container">
      <div class="logo">
        <img src="/images/logo.png" alt="Observatorio Ambiental" />
      </div>
      <nav class="nav">
        <a href="/">Home</a>
        <a href="/participation">Participation</a>
        <a href="/maps">Maps</a>
        <a href="/news">News</a>
        <a href="/documents">Documents</a>
      </nav>
    </div>
  </header>

  <section class="hero-carousel" style="background-image: url('/images/hero-bg-01.webp'); background-size: cover; background-position: center;">
    <div class="carousel-container">
      <div class="carousel-slide active" aria-hidden="false">
        <img src="/images/hero-bg-01.webp" alt="Observatorio Ambiental 1" loading="eager" fetchpriority="high" decoding="sync"/>
        <div class="slide-overlay"></div>
        <div class="slide-content">
          <h1>{title}</h1>
          <p>Monitoreando el medio ambiente para un futuro sostenible</p>
        </div>
      </div>
      
      <div class="carousel-slide">
        <img src="/images/hero-bg-02.webp" alt="Observatorio Ambiental 2" loading="lazy" />
        <div class="slide-overlay"></div>
        <div class="slide-content">
          <h1>Protecci√≥n Ambiental</h1>
          <p>Datos precisos para decisiones informadas</p>
        </div>
      </div>
      
      <div class="carousel-slide">
        <img src="/images/hero-bg-03.webp" alt="Observatorio Ambiental 3" loading="lazy" />
        <div class="slide-overlay"></div>
        <div class="slide-content">
          <h1>Innovaci√≥n Verde</h1>
          <p>Tecnolog√≠a al servicio del medio ambiente</p>
        </div>
      </div>

      <div class="carousel-slide">
        <img src="/images/hero-bg-04.webp" alt="Observatorio Ambiental 4" loading="lazy" />
        <div class="slide-overlay"></div>
        <div class="slide-content">
          <h1>Entre bigotes y hojas</h1>
          <p>Observamos la naturaleza con precisi√≥n y pasi√≥n.</p>
        </div>
      </div>
    </div>

    <!-- Indicadores -->
    <div class="carousel-indicators">
      <button class="indicator active" data-slide="0"></button>
      <button class="indicator" data-slide="1"></button>
      <button class="indicator" data-slide="2"></button>
      <button class="indicator" data-slide="3"></button>
    </div>

    <!-- Controles de navegaci√≥n -->
    <button class="carousel-control prev" id="prevBtn">
      <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
        <path d="M15 18L9 12L15 6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
      </svg>
    </button>
    <button class="carousel-control next" id="nextBtn">
      <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
        <path d="M9 18L15 12L9 6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
      </svg>
    </button>
  </section>

  <main>
    <slot />
  </main>

  <footer class="footer">
    <div class="container">
      <div class="footer-grid">
        <div class="footer-col">
          <div class="logo-footer">
            <img src="/images/logo-footer.png" alt="Logo Observatorio Ambiental" />
          </div>
          <p>
            Observatorio Ambiental<br />
            Av. 9 de Julio 1234, Ciudad<br />
            info@observatorioambiental.org
          </p>
          <div class="social-links">
            <a href="#"><i class="fab fa-facebook-f"></i></a>
            <a href="#"><i class="fab fa-twitter"></i></a>
            <a href="#"><i class="fab fa-instagram"></i></a>
          </div>
        </div>

        <div class="footer-col">
          <h4>Secciones</h4>
          <ul>
            <li><a href="/">Home</a></li>
            <li><a href="/participation">Participation</a></li>
            <li><a href="/maps">Maps</a></li>
            <li><a href="/news">News</a></li>
            <li><a href="/documents">Documents</a></li>
          </ul>
        </div>

        <div class="footer-col">
          <h4>Recursos</h4>
          <ul>
            <li><a href="#">Descargas</a></li>
            <li><a href="#">API</a></li>
            <li><a href="#">Reportes</a></li>
            <li><a href="#">Sistema</a></li>
          </ul>
        </div>

        <div class="footer-col">
          <h4>Contacto</h4>
          <ul>
            <li>Email: contacto@observatorioambiental.org</li>
            <li>Tel: +54 11 1234-5678</li>
            <li>Horario: L-V 9:00 - 18:00</li>
          </ul>
        </div>
      </div>
      <div class="footer-bottom">
        <p>&copy; {year} Observatorio Ambiental. Todos los derechos reservados.</p>
      </div>
    </div>
  </footer>

</body>
</html>

<script>
document.addEventListener("DOMContentLoaded", () => {
  const nav = document.querySelector(".header .nav");
  const links = nav.querySelectorAll("a");

  const indicator = document.createElement("span");
  indicator.classList.add("nav-indicator");
  nav.appendChild(indicator);

  function moveIndicator(el, instant = false) {
    const rect = el.getBoundingClientRect();
    const navRect = nav.getBoundingClientRect();

    if (instant) {
      indicator.style.transition = "none"; // ‚ùå sin animaci√≥n
    } else {
      indicator.style.transition = "width 0.3s ease, transform 0.3s ease"; // ‚úÖ animaci√≥n normal
    }

    indicator.style.width = rect.width + "px";
    indicator.style.transform = `translateX(${rect.left - navRect.left}px)`;

    if (instant) {
      // üî• reactivar transici√≥n despu√©s de forzar la posici√≥n inicial
      requestAnimationFrame(() => {
        indicator.style.transition = "width 0.3s ease, transform 0.3s ease";
      });
    }
  }

  function setActiveByPath() {
    const path = window.location.pathname;
    let found = false;
    links.forEach(link => {
      link.classList.remove("active");
      if (link.getAttribute("href") === path) {
        link.classList.add("active");
        moveIndicator(link, true); // üëà primera vez instant√°neo
        found = true;
      }
    });
    return found;
  }

  function onScroll() {
    const sections = document.querySelectorAll("main section[id]");
    let current = "";
    sections.forEach(sec => {
      const secTop = sec.offsetTop - 100;
      const secHeight = sec.clientHeight;
      if (window.scrollY >= secTop && window.scrollY < secTop + secHeight) {
        current = sec.getAttribute("id");
      }
    });
    links.forEach(link => {
      link.classList.remove("active");
      if (link.getAttribute("href") === "#" + current) {
        link.classList.add("active");
        moveIndicator(link);
      }
    });
  }

  links.forEach(link => {
    link.addEventListener("mouseenter", () => moveIndicator(link));
    link.addEventListener("mouseleave", () => {
      const active = nav.querySelector("a.active");
      if (active) moveIndicator(active);
    });
  });

  if (!setActiveByPath()) {
    window.addEventListener("scroll", onScroll);
    onScroll();
  }
});

// Carrusel autom√°tico
    class HeroCarousel {
      constructor() {
        this.currentSlide = 0;
        this.slides = document.querySelectorAll('.carousel-slide');
        this.indicators = document.querySelectorAll('.indicator');
        this.totalSlides = this.slides.length;
        this.autoPlayInterval = 5000; // 5 segundos
        this.isAutoPlaying = true;

        this.init();
      }

      init() {
        this.setupEventListeners();
        this.startAutoPlay();
      }

      setupEventListeners() {
        // Botones de navegaci√≥n
        document.getElementById('prevBtn')?.addEventListener('click', () => {
          this.prevSlide();
        });

        document.getElementById('nextBtn')?.addEventListener('click', () => {
          this.nextSlide();
        });

        // Indicadores
        this.indicators.forEach((indicator, index) => {
          indicator.addEventListener('click', () => {
            this.goToSlide(index);
          });
        });

        // Pausar autoplay al hacer hover
        const carousel = document.querySelector('.hero-carousel');
        carousel?.addEventListener('mouseenter', () => {
          this.pauseAutoPlay();
        });

        carousel?.addEventListener('mouseleave', () => {
          this.resumeAutoPlay();
        });
      }

      goToSlide(index) {
        // Remover clase active de slide actual
        this.slides[this.currentSlide]?.classList.remove('active');
        this.indicators[this.currentSlide]?.classList.remove('active');

        // Actualizar √≠ndice
        this.currentSlide = index;

        // Agregar clase active al nuevo slide
        this.slides[this.currentSlide]?.classList.add('active');
        this.indicators[this.currentSlide]?.classList.add('active');
      }

      nextSlide() {
        const next = (this.currentSlide + 1) % this.totalSlides;
        this.goToSlide(next);
      }

      prevSlide() {
        const prev = (this.currentSlide - 1 + this.totalSlides) % this.totalSlides;
        this.goToSlide(prev);
      }

      startAutoPlay() {
        this.autoPlayTimer = setInterval(() => {
          if (this.isAutoPlaying) {
            this.nextSlide();
          }
        }, this.autoPlayInterval);
      }

      pauseAutoPlay() {
        this.isAutoPlaying = false;
      }

      resumeAutoPlay() {
        this.isAutoPlaying = true;
      }
    }

    // Inicializar carrusel cuando el DOM est√© listo
    document.addEventListener('DOMContentLoaded', () => {
      new HeroCarousel();
    });

    document.addEventListener("DOMContentLoaded", () => {
    const slides = document.querySelectorAll(".carousel-slide");
    const indicators = document.querySelectorAll(".indicator");
    let currentIndex = 0;
    const intervalTime = 4000;
    let slideInterval;

    function showSlide(index) {
      slides.forEach((slide, i) => {
        slide.classList.toggle("active", i === index);
        indicators[i]?.classList.toggle("active", i === index);
      });
      currentIndex = index;
    }

    function nextSlide() {
      let newIndex = (currentIndex + 1) % slides.length;
      showSlide(newIndex);
    }

    // Auto play
    slideInterval = setInterval(nextSlide, intervalTime);

    // Indicadores clicables
    indicators.forEach((indicator, i) => {
      indicator.addEventListener("click", () => {
        showSlide(i);
        clearInterval(slideInterval);
        slideInterval = setInterval(nextSlide, intervalTime);
      });
    });

    // Controles prev/next
    document.querySelector(".carousel-control.prev")?.addEventListener("click", () => {
      let newIndex = (currentIndex - 1 + slides.length) % slides.length;
      showSlide(newIndex);
      clearInterval(slideInterval);
      slideInterval = setInterval(nextSlide, intervalTime);
    });

    document.querySelector(".carousel-control.next")?.addEventListener("click", () => {
      nextSlide();
      clearInterval(slideInterval);
      slideInterval = setInterval(nextSlide, intervalTime);
    });

    // mostrar el primero al inicio
    showSlide(0);
  });
</script>
