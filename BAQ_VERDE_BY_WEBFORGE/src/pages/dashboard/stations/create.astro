---
import Layout from '../../../layouts/DashboardLayout.astro';
import { api } from '../../../lib/api';

export const prerender = false;

const cookieStore = Astro.cookies;
const sessionToken = cookieStore.get('token')?.value;

if (!sessionToken) {
  return Astro.redirect('/login');
}

if (Astro.url.searchParams.get('logout') === 'true') {
  Astro.cookies.delete('token', { path: '/' });
  return Astro.redirect('/login');
}

let error = null;
let success = null;

if (Astro.request.method === 'POST') {
  const formData = await Astro.request.formData();
  const name = formData.get('name')?.toString().trim();
  const lat = formData.get('lat')?.toString();
  const lon = formData.get('lon')?.toString();

  // Obtener checkboxes seleccionados
  const chartsSelected = [];
  const allCharts = ['PM10', 'PM2.5', 'CO', 'O3', 'SO2', 'ICA'];
  for (const chart of allCharts) {
    if (formData.get(`chart_${chart}`)) {
      chartsSelected.push(chart);
    }
  }

  // Validación
  if (!name || !lat || !lon) {
    error = 'Nombre, latitud y longitud son requeridos';
  } else if (chartsSelected.length === 0) {
    error = 'Debes seleccionar al menos un gráfico permitido';
  } else {
    const payload = {
      name,
      lat: parseInt(lat),
      lon: parseInt(lon),
      charts_permited: chartsSelected,
    };

    const res = await api("/stations", sessionToken, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(payload),
    });

    if (res) {
      success = 'Estación creada con éxito';
      return Astro.redirect('/dashboard/stations?success=true');
    } else {
      error = 'Error al crear la estación. Revisa los datos e intenta de nuevo.';
    }
  }
}
---

<Layout title="Crear Estación">
  <div class="container">
    <h1>📡 Crear Nueva Estación</h1>

    {error && <div class="alert error">{error}</div>}
    {success && <div class="alert success">{success}</div>}

    <form method="post" class="form-station">
      <div class="form-group">
        <label for="name">Nombre de la Estación *</label>
        <input type="text" id="name" name="name" required placeholder="Ej: Estación Norte" />
      </div>

      <div class="form-row">
        <div class="form-group">
          <label for="lat">Latitud * (-90 a 90)</label>
          <input type="number" id="lat" name="lat" required min="-90" max="90" step="1" placeholder="Ej: 4" />
        </div>
        <div class="form-group">
          <label for="lon">Longitud * (-180 a 180)</label>
          <input type="number" id="lon" name="lon" required min="-180" max="180" step="1" placeholder="Ej: -74" />
        </div>
      </div>

      <div class="form-group">
        <label>Gráficos Permitidos * (Selecciona al menos uno)</label>
        <div class="checkbox-group">
          {['PM10', 'PM2.5', 'CO', 'O3', 'SO2', 'ICA'].map((chart) => (
            <label class="checkbox-label">
              <input type="checkbox" name={`chart_${chart}`} value={chart} />
              {chart}
            </label>
          ))}
        </div>
      </div>

      <button type="submit" class="btn-submit">💾 Crear Estación</button>
      <a href="/dashboard/stations" class="btn-cancel">⬅️ Cancelar</a>
    </form>
  </div>

  <style>
    .container {
      padding: 20px;
      max-width: 800px;
      margin: 0 auto;
    }

    .form-station {
      display: flex;
      flex-direction: column;
      gap: 20px;
    }

    .form-group label {
      display: block;
      margin-bottom: 5px;
      font-weight: bold;
      color: white;
    }

    .form-group input {
      width: 100%;
      padding: 10px;
      border: 1px solid #555;
      border-radius: 5px;
      background: rgba(255,255,255,0.1);
      color: white;
      font-size: 1rem;
    }

    .form-row {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 20px;
    }

    .checkbox-group {
      display: flex;
      flex-wrap: wrap;
      gap: 15px;
      margin-top: 10px;
    }

    .checkbox-label {
      display: flex;
      align-items: center;
      gap: 8px;
      padding: 8px 12px;
      background: rgba(255,255,255,0.1);
      border-radius: 5px;
      cursor: pointer;
      transition: background 0.2s;
    }

    .checkbox-label:hover {
      background: rgba(255,255,255,0.2);
    }

    .checkbox-label input[type="checkbox"] {
      transform: scale(1.2);
      cursor: pointer;
    }

    .btn-submit {
      padding: 12px 24px;
      background: #4CAF50;
      color: white;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      font-weight: bold;
      font-size: 1rem;
    }

    .btn-cancel {
      padding: 10px 20px;
      background: #666;
      color: white;
      text-decoration: none;
      border-radius: 5px;
      text-align: center;
      display: inline-block;
      font-size: 1rem;
    }

    .alert {
      padding: 12px;
      border-radius: 5px;
      margin-bottom: 20px;
      font-weight: 500;
    }

    .alert.error {
      background: #f44336;
      color: white;
    }

    .alert.success {
      background: #4CAF50;
      color: white;
    }

    @media (max-width: 768px) {
      .form-row {
        grid-template-columns: 1fr;
      }
    }
  </style>
</Layout>