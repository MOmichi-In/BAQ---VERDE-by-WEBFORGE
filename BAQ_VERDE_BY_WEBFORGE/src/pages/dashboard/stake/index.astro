---
import { date } from 'astro:schema';
import Layout from '../../../layouts/DashboardLayout.astro';
import { api } from '../../../lib/api';

export const prerender = false;

const cookieStore = Astro.cookies;
const sessionToken = cookieStore.get('token')?.value;

if (!sessionToken) {
  return Astro.redirect('/login');
}

// Borrar la cookie directamente desde el servidor si se pide
if (Astro.url.searchParams.get('logout') === 'true') {
  Astro.cookies.delete('token', { path: '/' });
  return Astro.redirect('/login');
}

const data = await api("/news/?category=Participacion - Localidades", sessionToken)
const data2 = await api("/news/?category=Participacion - Ciudadana", sessionToken)
const data3 = await api("/news/?category=Participacion - Regionales", sessionToken)


// Obtener noticias desde la API
const noticiasRes = [...data, ...data2, ...data3]
const noticias = noticiasRes
---

<Layout title="Participaci√≥n Ciudadana">
  <div class="dashboard-container">
    <!-- Header Section -->
    <div class="dashboard-header">
      <div class="header-content">
        <div class="title-section">
          <h1 class="dashboard-title">Participaci√≥n Ciudadana</h1>
          <p class="dashboard-subtitle">Supervisa reportes ciudadanos, comentarios y sugerencias</p>
        </div>
        <a href="/dashboard/stake/create" class="btn-create">
          <span class="btn-icon">+</span>
          Crear Participaci√≥n
        </a>
      </div>
    </div>

    <!-- Stats Cards -->
    <div class="stats-grid">
      <div class="stat-card">
        <div class="stat-number">{noticias.length}</div>
        <div class="stat-label">Total de Participaciones</div>
      </div>
      <div class="stat-card">
        <div class="stat-number">{noticias.filter(n => n.status === 'active').length || noticias.length}</div>
        <div class="stat-label">Participaciones Activas</div>
      </div>
      <div class="stat-card">
        <div class="stat-number">{new Date().getMonth() + 1}</div>
        <div class="stat-label">Mes Actual</div>
      </div>
    </div>

    <!-- Content Section -->
    <div class="content-section">
      <h2 class="section-title">Todas las Participaciones</h2>
      <div class="participaciones-grid">
        {noticias.map((noticia) => (
          <div class="participacion-card">
            <div class="participacion-image-container">
              <img 
                src={`${import.meta.env.PUBLIC_URL_SERVER}${noticia.img_url}`} 
                alt="Imagen de la participaci√≥n ciudadana" 
                class="participacion-image" 
              />
              <div class="category-badge">Participaci√≥n</div>
            </div>
            <div class="participacion-content">
              <h3 class="participacion-title">{noticia.title}</h3>
              <div class="participacion-actions">
                <a href={`/dashboard/stake/edit/${noticia._id}`} class="btn-edit">
                  <span class="btn-icon">‚úèÔ∏è</span>
                  Editar
                </a>
                <button class="btn-delete" data-id={noticia._id}>
                  <span class="btn-icon">üóëÔ∏è</span>
                  Eliminar
                </button>
              </div>
            </div>
          </div>
        ))}
        
        {noticias.length === 0 && (
          <div class="empty-state">
            <div class="empty-icon">ü§ù</div>
            <h3 class="empty-title">No hay participaciones registradas</h3>
            <p class="empty-description">Comienza creando la primera participaci√≥n ciudadana</p>
            <a href="/dashboard/stake/create" class="btn-empty-action">
              <span class="btn-icon">+</span>
              Crear Primera Participaci√≥n
            </a>
          </div>
        )}
      </div>
    </div>
  </div>

  <style>
    /* Dashboard container */
    .dashboard-container {
      padding: 2rem;
      margin: 0 auto;
      min-height: 100vh;
      max-width: 95vw;
      background: var(--bv-gris-claro);
    }

    /* Header */
    .dashboard-header {
      padding: 2rem;
      margin-bottom: 2rem;
      border-radius: var(--border-radius-lg);
      background: var(--color-verde);
      color: var(--color-blanco);
      box-shadow: var(--shadow-lg);
    }

    .header-content { display: flex; justify-content: space-between; align-items: center; flex-wrap: wrap; gap: 1rem; }
    .title-section { flex: 1; }

    .dashboard-title {
      font-size: 2.5rem;
      font-weight: 700;
      margin: 0 0 0.5rem 0;
      background: var(--color-blanco);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
    }

    .dashboard-subtitle {
      font-size: 1.1rem;
      opacity: 0.9;
      margin: 0;
    }

    /* Buttons */
    .btn-create {
      background: var(--color-amarillo);
      color: var(--color-azul-oscuro);
      padding: 1rem 1.5rem;
      border-radius: var(--border-radius-md);
      font-weight: 600;
      display: flex;
      align-items: center;
      gap: 0.5rem;
      transition: all 0.3s ease;
    }
    .btn-create:hover {
      background: lighten(var(--color-amarillo), 10%);
      transform: translateY(-2px);
    }
    .btn-icon { font-size: 1.2rem; }

    /* Stats */
    .stats-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
      gap: 1.5rem;
      margin-bottom: 2rem;
    }

    .stat-card {
      background: rgba(255, 255, 255, 0.9);
      backdrop-filter: blur(10px);
      padding: 1.5rem;
      border-radius: var(--border-radius-md);
      text-align: center;
      border: 1px solid rgba(255, 255, 255, 0.2);
      box-shadow: var(--shadow-md);
      transition: transform 0.3s ease;
    }
    .stat-card:hover { transform: translateY(-4px); }

    .stat-number {
      font-size: 2.5rem;
      font-weight: 700;
      color: var(--color-verde);
      margin-bottom: 0.5rem;
    }

    .stat-label { color: var(--color-gris-medio); font-weight: 500; }

    /* Content Section */
    .content-section {
      background: rgba(255, 255, 255, 0.9);
      backdrop-filter: blur(10px);
      border-radius: var(--border-radius-lg);
      padding: 2rem;
      border: 1px solid rgba(255, 255, 255, 0.2);
      box-shadow: var(--shadow-lg);
    }

    .section-title {
      font-size: 1.5rem;
      font-weight: 600;
      color: var(--color-azul-oscuro);
      margin-bottom: 1.5rem;
      border-bottom: 2px solid var(--color-verde);
      display: inline-block;
      padding-bottom: 0.5rem;
    }

    /* Participaciones Grid */
    .participaciones-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
      gap: 1.5rem;
    }

    .participacion-card {
      background: rgba(255, 255, 255, 0.95);
      border-radius: var(--border-radius-lg);
      overflow: hidden;
      box-shadow: var(--shadow-md);
      transition: all 0.3s ease;
      border: 1px solid rgba(255, 255, 255, 0.2);
    }

    .participacion-card:hover {
      transform: translateY(-4px);
      box-shadow: var(--shadow-lg);
    }

    .participacion-image-container { position: relative; height: 200px; overflow: hidden; }
    .participacion-image { width: 100%; height: 100%; object-fit: cover; transition: transform 0.3s ease; }
    .participacion-card:hover .participacion-image { transform: scale(1.05); }

    .category-badge {
      position: absolute; top: 1rem; right: 1rem;
      background: var(--color-verde-secundario);
      color: var(--color-blanco);
      padding: 0.5rem 1rem; border-radius: 20px; font-size: 0.8rem; font-weight: 600;
      backdrop-filter: blur(10px);
    }

    .participacion-content { padding: 1.5rem; }

    .participacion-title {
      font-size: 1.2rem;
      font-weight: 600;
      color: var(--color-azul-oscuro);
      margin: 0 0 1rem 0;
      line-height: 1.4;
      display: -webkit-box;
      -webkit-line-clamp: 2;
      -webkit-box-orient: vertical;
      overflow: hidden;
    }

    .participacion-actions { display: flex; gap: 0.75rem; }

    .btn-edit, .btn-delete {
      flex: 1; padding: 0.75rem 1rem; border-radius: var(--border-radius-md);
      font-weight: 500; display: flex; align-items: center; justify-content: center;
      gap: 0.5rem; transition: all 0.3s ease; font-size: 0.9rem; cursor: pointer; border: none; text-decoration: none;
    }

    .btn-edit {
      background: var(--color-verde);
      color: var(--color-blanco);
    }
    .btn-edit:hover {
      background: var(--color-verde-secundario);
      transform: translateY(-1px);
    }

    .btn-delete {
      background: var(--color-amarillo);
      color: var(--color-azul-oscuro);
    }
    .btn-delete:hover {
      background: lighten(var(--color-amarillo), 10%);
      transform: translateY(-1px);
    }

    /* Empty State */
    .empty-state {
      grid-column: 1 / -1;
      text-align: center;
      padding: 4rem 2rem;
      background: rgba(76, 175, 80, 0.05);
      border-radius: var(--border-radius-lg);
      border: 2px dashed var(--color-verde-secundario);
    }

    .empty-icon { font-size: 4rem; margin-bottom: 1rem; opacity: 0.7; }
    .empty-title { font-size: 1.5rem; font-weight: 600; color: var(--color-azul-oscuro); margin: 0 0 1rem 0; }
    .empty-description { color: var(--color-gris-medio); margin-bottom: 2rem; font-size: 1.1rem; }

    .btn-empty-action {
      background: var(--color-verde);
      color: var(--color-blanco);
      padding: 1rem 2rem;
      border-radius: var(--border-radius-md);
      text-decoration: none;
      font-weight: 600;
      display: inline-flex;
      align-items: center;
      gap: 0.5rem;
      transition: all 0.3s ease;
      box-shadow: var(--shadow-md);
    }
    .btn-empty-action:hover {
      background: var(--color-verde-secundario);
      transform: translateY(-2px);
      box-shadow: var(--shadow-lg);
    }

  </style>

  <script>
    document.querySelectorAll('.btn-delete').forEach(btn => {
      btn.addEventListener('click', async (e) => {
        const id = e.target.dataset.id;
        if (confirm('¬øEliminar esta participaci√≥n?')) {

          // üëá Obtener el token de las cookies
          const token = document.cookie
            .split('; ')
            .find(row => row.startsWith('token='))
            ?.split('=')[1];

          if (!token) {
            alert('No est√°s autenticado. Por favor, inicia sesi√≥n.');
            return;
          }
          
          console.log(import.meta.env.PUBLIC_URL_SERVER + "aswddadsa")
          
          const res = await fetch(`${import.meta.env.PUBLIC_URL_SERVER}/news/${id}`, {
            method: 'DELETE',
            headers: {
              'Authorization': `Bearer ${token}`, // üëà ¬°Token agregado!
              'Content-Type': 'application/json'
            }
          });

          if (res.ok) {
            location.reload();
          } else {
            const errorData = await res.json().catch(() => ({}));
            alert(`Error al eliminar: ${errorData.detail || 'Error desconocido'}`);
          }
        }
      });
    });
  </script>
</Layout>