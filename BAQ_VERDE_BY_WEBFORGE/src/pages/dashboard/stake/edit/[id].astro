---
// src/pages/dashboard/stake/edit/[id].astro

import Layout from "../../../../layouts/DashboardLayout.astro";
import { api } from "../../../../lib/api";

export const prerender = false;

const { id } = Astro.params;

// Obtener token
const cookieStore = Astro.cookies;
const sessionToken = cookieStore.get("token")?.value;

if (!sessionToken) {
    return Astro.redirect("/login");
}

// Obtener la participaci√≥n actual por ID
let participacion;
try {
    const res = await api(`/news/${id}`, sessionToken); // ‚Üê Aseg√∫rate que esta ruta exista en tu backend
    participacion = res;
} catch (error) {
    console.error("Error al cargar la participaci√≥n:", error);
    return Astro.redirect("/dashboard/stake?error=participacion_no_encontrada");
}
---

<Layout title="Editar Participaci√≥n">
    <div class="dashboard-container">
        <!-- Header Section -->
        <div class="dashboard-header">
            <div class="header-content">
                <div class="title-section">
                    <h1 class="dashboard-title">‚úèÔ∏è Editar Participaci√≥n Ciudadana</h1>
                    <p class="dashboard-subtitle">
                        Modifica los datos de la participaci√≥n seleccionada
                    </p>
                </div>
                <div class="header-actions">
                    <a href="/dashboard/stake" class="btn-back">
                        <span class="btn-icon">‚¨ÖÔ∏è</span>
                        Volver al Panel
                    </a>
                </div>
            </div>
        </div>

        <!-- Form Section -->
        <div class="form-container">
            <div class="form-header">
                <h2 class="form-title">Informaci√≥n de la Participaci√≥n</h2>
                <p class="form-subtitle">Actualiza los campos seg√∫n sea necesario</p>
            </div>

            <form class="news-form" id="edit-form" enctype="multipart/form-data">
                <input type="hidden" id="participacion-id" value={participacion._id} />

                <div class="form-grid">
                    <!-- T√≠tulo -->
                    <div class="form-group full-width">
                        <label for="title" class="form-label">
                            <span class="label-icon">üìù</span>
                            T√≠tulo de la Participaci√≥n
                        </label>
                        <input
                            type="text"
                            id="title"
                            name="title"
                            class="form-input"
                            value={participacion.title}
                            placeholder="Ingresa el t√≠tulo de la participaci√≥n..."
                            required
                        />
                    </div>

                    <!-- Imagen Actual -->
                    {
                        participacion.img_url && (
                            <div class="form-group">
                                <label class="form-label">
                                    <span class="label-icon">üñºÔ∏è</span>
                                    Imagen Actual
                                </label>
                                <div class="current-image-preview">
                                    <img
                                        src={`${import.meta.env.PUBLIC_URL_SERVER}${participacion.img_url}`}
                                        alt="Imagen actual"
                                        class="preview-img-tag"
                                    />
                                </div>
                            </div>
                        )
                    }

                    <!-- Nueva Imagen (opcional) -->
                    <div class="form-group">
                        <label for="image" class="form-label">
                            <span class="label-icon">üìÅ</span>
                            Cambiar Imagen (opcional)
                        </label>
                        <div class="file-upload-wrapper">
                            <input
                                type="file"
                                id="image"
                                name="image"
                                class="file-input"
                                accept="image/*"
                            />
                            <label for="image" class="file-upload-label">
                                <span class="upload-icon">üìÅ</span>
                                <span class="upload-text">Seleccionar nueva imagen</span>
                            </label>
                        </div>
                        <!-- Preview de la imagen seleccionada -->
                        <div
                            id="image-preview"
                            class="selected-image-preview"
                            style="display: none; margin-top: 1rem;"
                        >
                            <label>Nueva imagen seleccionada:</label><br />
                            <img
                                id="preview-img-tag"
                                src=""
                                alt="Vista previa"
                                class="preview-img-tag"
                            />
                        </div>
                    </div>
                </div>

                <!-- Form Actions -->
                <div class="form-actions">
                    <button type="submit" class="btn-submit">
                        <span class="btn-icon">üíæ</span>
                        Guardar Cambios
                    </button>
                    <a href="/dashboard/stake" class="btn-cancel">
                        <span class="btn-icon">‚ùå</span>
                        Cancelar
                    </a>
                </div>
            </form>
        </div>
    </div>

    <style>
        .dashboard-container {
            padding: var(--spacing-xl);
            max-width: 95vw;
            margin: 0 auto;
            background: linear-gradient(
                135deg,
                var(--color-blanco) 0%,
                var(--color-gris-claro) 100%
            );
            min-height: 100vh;
        }

        .dashboard-header {
            background: linear-gradient(
                135deg,
                var(--color-verde) 0%,
                var(--color-verde-secundario) 100%
            );
            border-radius: var(--border-radius-lg);
            padding: var(--spacing-xl);
            margin-bottom: var(--spacing-xl);
            color: var(--color-blanco);
            box-shadow: var(--shadow-lg);
        }

        .header-content {
            display: flex;
            justify-content: space-between;
            align-items: center;
            flex-wrap: wrap;
            gap: var(--spacing-md);
        }

        .title-section {
            flex: 1;
        }

        .dashboard-title {
            font-size: 2.5rem;
            font-weight: 700;
            margin: 0 0 0.5rem 0;
            background: var(--color-blanco);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .dashboard-subtitle {
            font-size: 1.1rem;
            opacity: 0.9;
            margin: 0;
        }

        .btn-back {
            background: rgba(255, 255, 255, 0.2);
            backdrop-filter: blur(10px);
            color: var(--color-blanco);
            padding: 1rem 1.5rem;
            border-radius: var(--border-radius-md);
            text-decoration: none;
            font-weight: 600;
            display: flex;
            align-items: center;
            gap: var(--spacing-sm);
            transition: all 0.3s ease;
            border: 1px solid rgba(255, 255, 255, 0.3);
        }

        .btn-back:hover {
            background: rgba(255, 255, 255, 0.3);
            transform: translateY(-2px);
        }

        .form-container {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: var(--border-radius-lg);
            padding: var(--spacing-xl);
            border: 1px solid rgba(255, 255, 255, 0.2);
            box-shadow: var(--shadow-md);
        }

        .form-header {
            margin-bottom: var(--spacing-xl);
            text-align: center;
        }

        .form-title {
            font-size: 1.8rem;
            font-weight: 600;
            color: var(--color-gris-oscuro);
            margin: 0 0 var(--spacing-sm) 0;
        }

        .form-subtitle {
            color: var(--color-gris-medio);
            font-size: 1rem;
            margin: 0;
        }

        .form-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: var(--spacing-lg);
            margin-bottom: var(--spacing-xl);
        }

        .form-group {
            display: flex;
            flex-direction: column;
            gap: var(--spacing-xs);
        }

        .form-group.full-width {
            grid-column: 1 / -1;
        }

        .form-label {
            font-weight: 600;
            color: var(--color-gris-oscuro);
            display: flex;
            align-items: center;
            gap: var(--spacing-xs);
            font-size: 0.95rem;
        }

        .label-icon {
            font-size: 1.1rem;
        }

        .form-input,
        .form-select,
        .form-textarea {
            padding: var(--spacing-md);
            border: 2px solid var(--color-gris-claro);
            border-radius: var(--border-radius-md);
            background: rgba(255, 255, 255, 0.8);
            font-size: 1rem;
            transition: all 0.3s ease;
            color: var(--color-gris-oscuro);
        }

        .form-input:focus,
        .form-select:focus,
        .form-textarea:focus {
            outline: none;
            border-color: var(--color-verde);
            background: rgba(255, 255, 255, 0.95);
            box-shadow: 0 0 0 3px rgba(76, 175, 80, 0.1);
        }

        .select-wrapper {
            position: relative;
        }

        .form-select {
            appearance: none;
            background-image: url("image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='m6 8 4 4 4-4'/%3e%3c/svg%3e");
            background-position: right 1rem center;
            background-repeat: no-repeat;
            background-size: 1rem;
            padding-right: 3rem;
        }

        .file-upload-wrapper {
            position: relative;
        }

        .file-input {
            position: absolute;
            opacity: 0;
            width: 100%;
            height: 100%;
            cursor: pointer;
        }

        .file-upload-label {
            display: flex;
            align-items: center;
            gap: var(--spacing-sm);
            padding: var(--spacing-md);
            border: 2px dashed var(--color-verde);
            border-radius: var(--border-radius-md);
            background: rgba(76, 175, 80, 0.05);
            cursor: pointer;
            transition: all 0.3s ease;
            color: var(--color-verde);
            font-weight: 500;
        }

        .file-upload-label:hover {
            background: rgba(76, 175, 80, 0.1);
            border-color: var(--color-verde-secundario);
        }

        .upload-icon {
            font-size: 1.2rem;
        }

        .current-image-preview,
        .selected-image-preview {
            background: rgba(0, 0, 0, 0.05);
            padding: 1rem;
            border-radius: var(--border-radius-sm);
            text-align: center;
        }

        .preview-img-tag {
            max-width: 100%;
            height: auto;
            max-height: 300px;
            object-fit: cover;
            border-radius: var(--border-radius-sm);
            box-shadow: var(--shadow-sm);
            margin-top: 0.5rem;
        }

        .form-actions {
            display: flex;
            gap: var(--spacing-md);
            justify-content: center;
            flex-wrap: wrap;
        }

        .btn-submit,
        .btn-cancel {
            padding: 1rem 2rem;
            border-radius: var(--border-radius-md);
            font-weight: 600;
            display: flex;
            align-items: center;
            gap: var(--spacing-xs);
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            cursor: pointer;
            text-decoration: none;
            font-size: 1rem;
            min-width: 160px;
            justify-content: center;
        }

        .btn-submit {
            background: linear-gradient(
                135deg,
                var(--color-verde) 0%,
                var(--color-verde-secundario) 100%
            );
            color: var(--color-blanco);
            border: none;
            box-shadow: var(--shadow-md);
        }

        .btn-submit:hover {
            transform: translateY(-2px);
            box-shadow: var(--shadow-lg);
        }

        .btn-cancel {
            background: linear-gradient(
                135deg,
                var(--color-gris-medio) 0%,
                var(--color-gris-oscuro) 100%
            );
            color: var(--color-blanco);
            box-shadow: var(--shadow-md);
        }

        .btn-cancel:hover {
            transform: translateY(-2px);
            box-shadow: var(--shadow-lg);
        }

        .btn-icon {
            font-size: 1.1rem;
        }

        @media (max-width: 768px) {
            .dashboard-container {
                padding: var(--spacing-md);
            }

            .dashboard-title {
                font-size: 2rem;
            }

            .header-content {
                flex-direction: column;
                text-align: center;
            }

            .form-grid {
                grid-template-columns: 1fr;
            }

            .form-actions {
                flex-direction: column;
            }

            .btn-submit,
            .btn-cancel {
                width: 100%;
            }
        }
    </style>

    <script>
        const participacionId = document.getElementById("participacion-id").value;

        // Preview de imagen seleccionada
        document.getElementById("image").addEventListener("change", function (e) {
            const file = e.target.files[0];
            const previewContainer = document.getElementById("image-preview");
            const previewImg = document.getElementById("preview-img-tag");

            if (file) {
                const reader = new FileReader();
                reader.onload = function (event) {
                    previewImg.src = event.target.result;
                    previewContainer.style.display = "block";
                };
                reader.onerror = function () {
                    alert("Error al leer la imagen.");
                };
                reader.readAsDataURL(file);
            } else {
                previewContainer.style.display = "none";
            }
        });

        // Manejar env√≠o del formulario
        document.getElementById("edit-form").addEventListener("submit", async function (e) {
            e.preventDefault();

            const formData = new FormData(this);
            const data = {
                title: formData.get("title")?.toString() || "",
                // Si tu backend espera m√°s campos, agr√©gales aqu√≠
            };

            // Si se seleccion√≥ una nueva imagen, convertirla a base64
            const imageFile = formData.get("image");
            if (imageFile && imageFile.size > 0) {
                try {
                    const base64 = await new Promise((resolve, reject) => {
                        const reader = new FileReader();
                        reader.onload = () => resolve(reader.result);
                        reader.onerror = reject;
                        reader.readAsDataURL(imageFile);
                    });
                    data.img_url = base64;
                } catch (err) {
                    alert("Error al leer la imagen.");
                    console.error(err);
                    return;
                }
            }

            // Obtener token de cookies
            const token = document.cookie
                .split("; ")
                .find((row) => row.startsWith("token="))
                ?.split("=")[1];

            if (!token) {
                alert("No est√°s autenticado.");
                return;
            }

            try {
                const res = await fetch(
                    `${import.meta.env.PUBLIC_URL_SERVER}/news/${participacionId}`,
                    {
                        method: "PUT",
                        headers: {
                            Authorization: `Bearer ${token}`,
                            "Content-Type": "application/json",
                        },
                        body: JSON.stringify(data),
                    }
                );

                if (res.ok) {
                    window.location.href = "/dashboard/stake?success=participacion_actualizada";
                } else {
                    const errorData = await res.json().catch(() => ({}));
                    alert(
                        `Error: ${errorData.detail || "No se pudo actualizar la participaci√≥n."}`
                    );
                }
            } catch (err) {
                alert("Error de conexi√≥n.");
                console.error(err);
            }
        });
    </script>
</Layout>
